query search($id: ID, $limit: Int = 20, $tag: String, $keyword: String, $owner: String, $sort: ModelsSortInput = {created_at: {order: DESC}}) {
  blog: models(per_page: $limit, filter: {id: {value: $id}, model_schema_name: {value: "blog"}, deleted_at: {exists: false}, properties: [{name: "owner", value: $owner}, {name: "tags", contains: $tag}], or: [{properties: {name: "description", contains: $keyword}}, {properties: {name: "name", contains: $keyword}}, {properties: {name: "tags", contains: $keyword}}]}, sort: [$sort]) {
    total_entries
    results {
      id
      created_at
      type: model_schema_name
      uuid: property(name: "uuid")
      name: property(name: "name")
      description: property(name: "description")
      tags: property_array(name: "tags")
      cover_photo_url: property(name: "cover_photo_url")
      owner: related_model(model_schema_name: "profile", join_on_property: "owner", foreign_property: "id") {
        id
        type: model_schema_name
        uuid: property(name: "uuid")
        name: property(name: "name")
        bio: property(name: "bio")
        slug: property(name: "slug")
        avatar: related_model(model_schema_name: "photo", join_on_property: "uuid", foreign_property: "object_uuid", filter: {properties: {name: "photo_type", value: "avatar"}}) {
        photo: property_upload(name: "photo") {
          url
          versions
        }
      }
      }

      photos: related_models(model_schema_name: "photo", join_on_property: "uuid", foreign_property: "object_uuid") {
        id
        photo: property_upload(name: "photo") {
          file_name
          url
          versions
        }
      }
    }
  }
}
